{"version":3,"sources":["../$_lazy_route_resource lazy namespace object","./app/app-routing.module.ts","./app/app.component.ts","./app/app.component.html","./app/app.module.ts","./app/home/home.component.ts","./app/home/home.component.html","./app/question/question.component.ts","./app/question/question.component.html","./app/surveys/survey.service.ts","./environments/environment.ts","./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACH;AACY;;;AAIhE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAC;IACpC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACxC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;CAEjD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAU3C,MAAM,YAAY;IAWvB,YACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QATtC,UAAK,GAAG,sBAAsB,CAAC;QAG/B,iBAAY,GAAG,EAAE,CAAC;QAOhB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAC9C,CAAC;IAGD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YACzC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,MAAM;YAC3C,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG;SACtC,CAAC,CAAC;IACL,CAAC;;wEA7BU,YAAY;4FAAZ,YAAY;QCVzB,2EAA+B;;6FDUlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACT;AACO;AACY;AACX;AACC;AACb;;AAkBpC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,qEAAa,CAAC,YANjB;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;SACZ;mIAIU,SAAS,mBAblB,2DAAY;QACZ,kEAAa;QACb,8EAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;6FAKF,SAAS;cAfrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,8EAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;iBACZ;gBACD,SAAS,EAAE,CAAC,qEAAa,CAAC;gBAC1B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAA+C;QAAA,gGAAqC;QAAA,4DAAK;QAC3F,4DAAM;QACN,yEACE;QAAA,wEAAoB;QAAA,4EAA2E;QAAA,qEAAU;QAAA,4DAAS;QAAA,4DAAK;QACzH,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAH4B,0DAA4B;QAA5B,6IAA4B;;6FDCjD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG6B;;;;;;;ICmBrE,0EACE;IAAA,4EACA;IADyC,sVAA2B;IAApE,4DACA;IAAA,4EAA6B;IAAA,uDAAU;IAAA,4DAAQ;IACjD,4DAAM;;;;IAFiE,0DAAkB;IAAlB,uFAAkB;IAA9C,yFAA2B;IACvC,0DAAU;IAAV,0EAAU;;;IAGzC,6EACE;IAAA,mEACF;IAAA,4DAAS;;;IAKf,0EAA4E;IAAA,wEAAgE;IAAA,uDAA8F;IAAA,4DAAI;IAC9O,4DAAM;;;IADsI,0DAA8F;IAA9F,wNAA8F;;;IAMxO,qEACM;;;;IACN,0EACE;IAAA,wEAAyB;IAAA,6EAA6D;IAAzB,0TAAwB;IAAC,mEAAQ;IAAA,4DAAS;IAAA,4DAAI;IAC7G,4DAAM;;ADhCL,MAAM,iBAAiB;IAkB5B,YACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAbtC,kBAAa,GAAW,EAAE,CAAC;QAE3B,oBAAe,GAAG,CAAC,CAAC;QACpB,kBAAa,GAAG,KAAK,CAAC;QACtB,SAAI,GAAG,IAAI,CAAC;QACZ,iBAAY,GAAG,KAAK,CAAC;QAwCrB,iBAAY,GAAG,EAAE,CAAC;QASlB,iBAAY,GAAG,IAAI,wDAAS,CAAC;QAC3B,+BAA+B;SAChC,CAAC,CAAC;QA1CD,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACxC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,MAAM;YAC3C,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG;SACtC,CAAC,CAAC;IACL,CAAC;IAEH,4DAA4D;IAC5D,kHAAkH;IAClH,kIAAkI;IAChI,wBAAwB;QACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC;QAC3F,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,IAAW,aAAa,CAAC,KAAa;QACpC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAIH,mFAAmF;IACjF,kCAAkC;IAClC,OAAO;QACL,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAOH,4FAA4F;IAC5F,gEAAgE;IAC9D,YAAY,CAAC,YAAiB;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAElC,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAE,CAAC;IACtC,CAAC;IAED,qEAAqE;IACrE,YAAY;QACV,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACtC,CAAC;;kFAvFU,iBAAiB;iGAAjB,iBAAiB;;QCZ9B,yEACE;QAAA,yEACE;QAAA,oEAEM;QACR,4DAAM;QACR,4DAAM;QAEN,sEACA;QAAA,uDACA;QAAA,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAA+B;QAAA,uDAAmE;QAAA,4DAAK;QACzG,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,8EAEE;QAF2B,4RAAY,qBAA0B,IAAC;QAElE,+GACE;QAIF,sHACE;QAGJ,4DAAO;QACT,4DAAM;QAER,gHAA4E;QAG9E,4DAAM;QAEJ,0EACE;QAAA,gHACA;QACA,gHACE;QAEJ,4DAAM;QAER,4DAAM;QACR,4DAAM;;QAvCN,0DACA;QADA,sJACA;QAKqC,0DAAmE;QAAnE,oLAAmE;QAOvE,0DAA8B;QAA9B,gFAA8B;QAK/B,0DAAY;QAAZ,0EAAY;QAOnC,0DAAqB;QAArB,mFAAqB;QAM4B,0DAAqB;QAArB,mFAAqB;QAEtB,0DAAoB;QAApB,kFAAoB;;6FD9BhE,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEG;AACQ;;;AAO/C,MAAM,aAAa;IAMxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJrC,8CAA8C;QACrC,cAAS,GAAG,oCAAoC,CAAC;QAIvD,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAE/C,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,SAAS,CAAC;aAC3C,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EACxD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,UAAU,EAAE;aACrB,IAAI,CACH,0DAAG,CAAC,CAAC,OAAiB,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAC3D,CAAC;IACN,CAAC;IAEO,WAAW,CAAC,GAAsB;QACxC,oFAAoF;QACpF,4CAA4C;QAC5C,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,GAAG,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,kEAAkE;YAClE,YAAY,GAAG,sBAAsB,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAC1D;aAAM;YACL,sDAAsD;YACtD,6DAA6D;YAC7D,YAAY,GAAG,yBAAyB,GAAG,CAAC,MAAM,uBAAuB,GAAG,CAAC,OAAO,EAAE,CAAC;SACxF;QACD,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5B,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;;0EA1CU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {QuestionComponent} from \"./question/question.component\";\n\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'question', component: QuestionComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Survey } from './surveys/survey';\nimport { SurveyService } from './surveys/survey.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\n  title = 'Welkom bij de survey';\n\n\n  errorMessage = '';\n  currentSurvey: Survey;\n  surveys: Survey[];\n\n\n  constructor(\n    private surveyService: SurveyService) {\n    console.log(\"constructor van AppComponent\");\n  }\n\n\n  ngOnInit() {\n    console.log('ngInit van AppComponent');\n    this.surveyService.getSurveys().subscribe(data => {\n      this.surveys = data;\n    });\n  }\n\n  getSurvey(id: number) {\n    this.surveyService.getSurvey(id).subscribe({\n      next: survey => this.currentSurvey = survey,\n      error: err => this.errorMessage = err\n    });\n  }\n}\n\n\n\n\n\n","<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { QuestionComponent } from './question/question.component';\nimport {SurveyService} from \"./surveys/survey.service\";\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from \"@angular/forms\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    QuestionComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [SurveyService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"jumbotron-fluid\" Style=\"background-image: url('./assets/images/code.jpg');\">\r\n  <div class=\"container mx-auto\">\r\n    <div class=\"row\">\r\n      <h1 class='mx-auto' style=\"margin-top: 4rem;\" >Welkom bij de Ordina developers Quiz!</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n      <h2 class='mx-auto'><button [routerLink]=\"['/question']\" class=\"btn btn-dark btn-lg btn-block\">Start Quiz</button></h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AnswerOptions, Question, Survey} from '../surveys/survey';\r\nimport { SurveyService } from '../surveys/survey.service';\r\nimport {FormControl, FormGroup, FormsModule, Validators} from \"@angular/forms\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n\r\n  answers: string[];\r\n  chosenAnswerString: string;\r\n  answerOptionsArray: AnswerOptions[];\r\n  chosenAnswer: AnswerOptions;\r\n  selectedValue: String = '';\r\n  isCorrect: Boolean;\r\n  currentQuestion = 0;\r\n  buttonClicked = false;\r\n  show = true;\r\n  showVolgende = false;\r\n\r\n\r\n  public _currentSurvey: Survey;\r\n  private correct: boolean;\r\n\r\n\r\n  constructor(\r\n    private surveyService: SurveyService) {\r\n    console.log('constructor van Question');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.surveyService.getSurvey(1).subscribe({\r\n      next: survey => this.currentSurvey = survey,\r\n      error: err => this.errorMessage = err\r\n    });\r\n  }\r\n\r\n//hier wordt de String array\"answers\" geleegd in de functie,\r\n// vervolgens wordt de array gelijk /gematched aan de answeroption van deze vraag die uit de database zijn gehaald\r\n// In de forloop (HTML) wordt dan de answers gematched met dezelfde value waarde (dus antwoord A wordt radiobutton met Antwoord A)\r\n  setAnswersToRadiobuttons() {\r\n    this.answers = [];\r\n    this.answerOptionsArray = this.currentSurvey.questions[this.currentQuestion].answerOptions;\r\n    this.answerOptionsArray.forEach(answerOption => {\r\n      this.answers.push(answerOption.value);\r\n    });\r\n  }\r\n\r\n\r\n  public get currentSurvey(): Survey {\r\n    return this._currentSurvey;\r\n  }\r\n\r\n  public set currentSurvey(value: Survey) {\r\n    this._currentSurvey = value;\r\n    this.setAnswersToRadiobuttons();\r\n  }\r\n\r\n  errorMessage = '';\r\n\r\n//deze functie laat het witte vlak met uitleg zien en reset de buttonclicked gelijk\r\n  // showvolgende knop wordt getoond\r\n  clicked() {\r\n    this.buttonClicked = !this.buttonClicked;\r\n    this.showVolgende = !this.showVolgende;\r\n  }\r\n\r\n  questionForm = new FormGroup({\r\n    //gridradios: new FormControl()\r\n  });\r\n\r\n\r\n//Als je op submit drukt, laat het programma het witte vlak zien en verdwijnt de knop submit\r\n// (dit gebeurd met show) en clicked() functie wordt aangeroepen\r\n  onFormSubmit(questionForm: any) {\r\n    this.clicked();\r\n    this.show = !this.show;\r\n    console.log(this.selectedValue);\r\n\r\n  }\r\n\r\n  onItemChange(value){\r\n    console.log(\" Value is : \", value );\r\n  }\r\n\r\n  //als je op knop \"volgende\" drukt wil je de volgende vraag laten zien\r\n  nextQuestion() {\r\n    this.currentQuestion++;\r\n    this.setAnswersToRadiobuttons();\r\n    this.show = true;\r\n    this.showVolgende = false;\r\n    this.buttonClicked = false;\r\n    this.chosenAnswer = null;\r\n    console.log(\"witte vlak is nu weg\");\r\n  }\r\n\r\n//  public answerIsCorrect(): boolean {\r\n //   this.isCorrect = this.chosenAnswer.correct;\r\n  //  console.log(this.isCorrect);\r\n   // console.log(this.chosenAnswer.correct + \"dit is de .correct\");\r\n   // if (this.isCorrect === true) {\r\n    //  return true;\r\n   // } else {\r\n    //  return true;\r\n   // }\r\n\r\n  //}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"jumbotron-fluid\" Style=\"background-image: url('./assets/images/traffic.jpg');\">\r\n  <div class=\"container mx-auto\">\r\n    <div class=\"row\">\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n{{ _currentSurvey?.surveyDescription }}\r\n</div>\r\n\r\n<div class=\"jumbotron-fluid\" Style=\"background-color:black;\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <h2 style=\"margin-top: 2rem;\"> {{ _currentSurvey?.questions[currentQuestion].questionDescription}}</h2>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6\">\r\n        <form #questionForm=\"ngForm\" (ngSubmit)=\"onFormSubmit(questionForm)\">\r\n\r\n          <div class=\"radioBlok\" *ngFor=\"let answer of answers\">\r\n            <input type=\"radio\" name=\"answerButtons\" [(ngModel)]=\"selectedValue\" value=\"{{answer}}\">\r\n            <label class=\"antwoordLabel\">{{answer}}</label>\r\n          </div>\r\n\r\n          <button type=\"submit\" *ngIf=\"show\">\r\n            Submit\r\n          </button>\r\n\r\n        </form>\r\n      </div>\r\n\r\n    <div *ngIf=\"buttonClicked\" class=\"col-sm-6\" style=\"background-color: white\"><p ng-class=\"answerIsCorrect()? class='p-red': class='p-green'\">{{_currentSurvey?.questions[currentQuestion].answerOptions[0].answerExplanation}} blablablabla</p>\r\n    </div>\r\n\r\n  </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-11\" Style=\"background-color:black;\" *ngIf=\"buttonClicked\">\r\n      </div>\r\n      <div class=\"col-1\" Style=\"background-color:black;\" *ngIf=\"showVolgende\">\r\n        <p style=\"margin: 1rem;\"><button class=\"btn btn-dark btn-lg\" (click)=\"nextQuestion()\">Volgende</button></p>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { Survey } from './survey';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyService {\r\n\r\n // private surveyUrl = '/server/quiz/surveys';\r\n  private surveyUrl = 'http://localhost:8080/quiz/surveys';\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    console.log('constructor van SurveyService');\r\n\r\n  }\r\n\r\n  getSurveys(): Observable<Survey[]> {\r\n    console.log('getSurveys');\r\n    return this.http.get<Survey[]>(this.surveyUrl)\r\n      .pipe(\r\n        tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getSurvey(id: number): Observable<Survey | undefined> {\r\n    console.log('getSurvey by id');\r\n    return this.getSurveys()\r\n      .pipe(\r\n        map((surveys: Survey[]) => surveys.find(s => s.id === id))\r\n      );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}