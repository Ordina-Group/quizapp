{"version":3,"sources":["../$_lazy_route_resource lazy namespace object","./app/app-routing.module.ts","./app/app.component.ts","./app/app.component.html","./app/app.module.ts","./app/endpage/endpage.component.ts","./app/endpage/endpage.component.html","./app/home/home.component.ts","./app/home/home.component.html","./app/homescreen/homescreen.component.ts","./app/homescreen/homescreen.component.html","./app/namescreen/namescreen.component.ts","./app/namescreen/namescreen.component.html","./app/question/question.component.ts","./app/question/question.component.html","./app/scoreboard/scoreboard.component.ts","./app/scoreboard/scoreboard.component.html","./app/services/submitAnswer.service.ts","./app/services/survey-score.service.ts","./app/services/survey.service.ts","./app/services/url.service.ts","./environments/environment.ts","./main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from \"./home/home.component\";\r\nimport {QuestionComponent} from \"./question/question.component\";\r\nimport {EndpageComponent} from \"./endpage/endpage.component\";\r\nimport { HomescreenComponent } from './homescreen/homescreen.component';\r\nimport { NamescreenComponent } from './namescreen/namescreen.component';\r\nimport {ScoreboardComponent} from './scoreboard/scoreboard.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomescreenComponent},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'homescreen', component: HomescreenComponent},\r\n  {path: 'namescreen', component: NamescreenComponent},\r\n  {path: 'question', component: QuestionComponent},\r\n  {path: 'endpage', component:EndpageComponent},\r\n  {path: 'scoreboard', component: ScoreboardComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  title = 'Welkom bij de survey';\r\n\r\n  errorMessage = '';\r\n\r\n  constructor() {}\r\n  ngOnInit() {}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<nav class=\"navbar fixed-top\" Style=\"background-color: black; \">\r\n  <ul class=\"navbar-nav\" style=\"background-color: black\">\r\n    <li class=\"nav-item\">\r\n      <img src='./assets/images/ordinalogo.png'>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { SurveyService} from './services/survey.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { EndpageComponent } from './endpage/endpage.component';\r\nimport { SubmittedAnswerService } from './services/submitAnswer.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HomescreenComponent } from './homescreen/homescreen.component';\r\nimport {NamescreenComponent} from './namescreen/namescreen.component';\r\nimport {ScoreboardComponent} from './scoreboard/scoreboard.component';\r\n// import { formatDate } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    QuestionComponent,\r\n    EndpageComponent,\r\n    HomescreenComponent,\r\n    NamescreenComponent,\r\n    ScoreboardComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [SurveyService, SubmittedAnswerService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport { SurveyScoreService } from '../services/survey-score.service';\r\n\r\n@Component({\r\n  selector: 'app-endpage',\r\n  templateUrl: './endpage.component.html',\r\n  styleUrls: ['./endpage.component.css']\r\n})\r\nexport class EndpageComponent implements OnInit {\r\n  correctAnswer: number;\r\n  incorrectAnswer: number;\r\n\r\n  constructor(private surveyScoreService: SurveyScoreService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.correctAnswer = this.surveyScoreService.getCorrectAnswers();\r\n    this.incorrectAnswer = this.surveyScoreService.getIncorrectAnswers();\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron-fluid\">\r\n  <div class=\"container mx-auto\" style=\"margin-top: 2rem\">\r\n    <div class=\"row\">\r\n      <h2>Dit was het einde van de Quiz!</h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"jumbotron-fluid\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\"></div>\r\n      <div class=\"col-md-6\"><h3>Je hebt {{correctAnswer}} vra(a)g(en) goed beantwoord.</h3></div>\r\n      <div class=\"col-md-3\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\" style=\"background-color: black\">\r\n      <div class=\"col-md-3\"></div>\r\n      <div class=\"col-md-6\"><h3>Je hebt {{incorrectAnswer}} vra(a)g(en) fout beantwoord.</h3></div>\r\n      <div class=\"col-md-3\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <h2 class='mx-auto'><button [routerLink]=\"['/scoreboard']\" class=\"btn btn-dark btn-lg btn-block\">Ga naar het scorebord</button></h2>\r\n    </div>\r\n\r\n  </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"jumbotron-fluid\" Style=\"background-image: url('./assets/images/code.jpg');\">\r\n  <div class=\"container mx-auto\">\r\n    <div class=\"row\">\r\n      <h1 class='mx-auto' style=\"margin-top: 4rem;\" >Welkom bij de Ordina developers Quiz!</h1>\r\n    </div>\r\n    <div class=\"row\" >\r\n      <h2 class='mx-auto' style=\"margin-top: 8rem;\" ><button [routerLink]=\"['/question']\" class=\"btn btn-dark btn-lg btn-block\">Start Quiz</button></h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Survey} from \"../model/survey\";\r\nimport {SurveyService} from \"../services/survey.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-homescreen',\r\n  templateUrl: './homescreen.component.html',\r\n  styleUrls: ['./homescreen.component.css']\r\n})\r\nexport class HomescreenComponent implements OnInit {\r\n\r\n  chosenSurvey: number;\r\n\r\n  constructor(private surveyService: SurveyService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onOpenSurveySubmit() {\r\n    console.log(\"chosen survey: \" + this.chosenSurvey);\r\n    this.surveyService.getInitSurveys(this.chosenSurvey);\r\n    this.router.navigate(['/namescreen']);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"jumbotron jumbotron-fluid\" Style=\"background-color:black\">\r\n  <div class=\"container mx-auto\">\r\n    <div class=\"row align-items-start\">\r\n      <h1 class='mx-auto' style=\"margin-top: 4rem;\" >Welkom bij de Ordina Quizapp!</h1>\r\n    </div>\r\n  </div>\r\n    <div class=\"container mx-auto\" style=\"margin-top: 4rem\">\r\n      <h2>Voer een Surveynummer in:</h2>\r\n      <form #homescreenForm=\"ngForm\" (ngSubmit)=\"onOpenSurveySubmit()\">\r\n        <div class=\"form-inline justify-content-center\">\r\n          <input class=\"form-control mr-1\" [(ngModel)]=\"chosenSurvey\" [ngModelOptions]=\"{standalone: true}\">\r\n          <button type=\"submit\"  class=\"btn btn-dark\">Open Survey</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n\r\n  <div class=\"container mx-auto\" style=\"margin-top: 4rem\">\r\n    <h2>Of:</h2>\r\n    <div class=\"form-inline justify-content-center\">\r\n      <button [routerLink]=\"['/namescreen']\" class=\"btn btn-dark\">Maak een nieuwe Survey</button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {SurveyScoreService} from '../services/survey-score.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-namescreen',\r\n  templateUrl: './namescreen.component.html',\r\n  styleUrls: ['./namescreen.component.css']\r\n})\r\nexport class NamescreenComponent implements OnInit {\r\n\r\n  userName: string;\r\n\r\n  constructor(private surveyScoreService: SurveyScoreService,\r\n              private router: Router) {\r\n  }\r\n\r\n  onNaamSubmit() {\r\n    console.log('name entered: ' + this.userName);\r\n    this.surveyScoreService.setUserName(this.userName);\r\n    this.surveyScoreService.resetScores();\r\n    this.router.navigate(['/question']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<!--<div class=\"jumbotron-fluid\" Style=\"background-image: url('./assets/images/code.jpg');\">\r\n  <div class=\"container mx-auto\">\r\n    <div class=\"row\">\r\n      <h2 class='mx-auto' style=\"margin-top: 4rem;\" >Voer hier je naam in:</h2>\r\n    </div>\r\n    <div class=\"row\">\r\n      <form #namescreenForm=\"ngForm\" (ngSubmit)=\"onNaamSubmit()\">\r\n        <div class=\"form-name justify-content-center\">\r\n          <input class=\"form-control mr-1\" [(ngModel)]=\"userName\" [ngModelOptions]=\"{standalone: true}\">\r\n          <button type=\"submit\"  class=\"btn btn-dark\">Naar de eerste vraag</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>-->\r\n\r\n<div class=\"jumbotron jumbotron-fluid\" Style=\"background-color:black\">\r\n  <div class=\"container mx-auto\" style=\"margin-top: 4rem\">\r\n    <h2 class='mx-auto' style=\"margin-top: 4rem;\" >Voer hier je naam in:</h2>\r\n<!--    <div class=\"row\">\r\n    </div>-->\r\n    <form #homescreenForm=\"ngForm\" (ngSubmit)=\"onNaamSubmit()\">\r\n      <div class=\"form-inline justify-content-center\">\r\n        <input class=\"form-control mr-1\" size=\"15\" [(ngModel)]=\"userName\" [ngModelOptions]=\"{standalone: true}\">\r\n        <button type=\"submit\"  class=\"btn btn-dark\">Naar de eerste vraag</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SurveyService } from '../services/survey.service';\r\nimport { SubmittedAnswer } from '../model/submittedanswer';\r\nimport { AnswerIsCorrect } from '../model/answeriscorrect';\r\nimport { NavigationExtras, Router} from \"@angular/router\";\r\nimport { AnswerOptions } from '../model/answerOptions';\r\nimport { Question } from '../model/question';\r\nimport { SubmittedAnswerService } from '../services/submitAnswer.service';\r\nimport { Survey } from '../model/survey';\r\nimport { SurveyScoreService } from '../services/survey-score.service';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n\r\n  public _currentSurvey: Survey;\r\n  currentQuestion: Question;\r\n  answerOptionsArray: AnswerOptions[];\r\n  chosenAnswer: AnswerOptions;\r\n\r\n  submittedAnswer: SubmittedAnswer;\r\n  answerIsCorrect: AnswerIsCorrect;\r\n\r\n  currentQuestionNumber = 0;\r\n  errorMessage = '';\r\n  private date: Date;\r\n  private dateString: string;\r\n\r\n  ngOnInit(): void {\r\n    this.surveyService.survey.subscribe(survey => {\r\n      this.currentSurvey = survey;\r\n    })\r\n  }\r\n\r\n  constructor(private surveyService: SurveyService,\r\n              private submittedAnswerService: SubmittedAnswerService,\r\n              private surveyScoreService: SurveyScoreService,\r\n              private router: Router) {\r\n  }\r\n\r\n  public get currentSurvey(): Survey {\r\n    return this._currentSurvey;\r\n  }\r\n\r\n  public set currentSurvey(value: Survey) {\r\n    this._currentSurvey = value;\r\n    console.log(\"survey is: \" + JSON.stringify(this._currentSurvey))\r\n    if(this._currentSurvey !== undefined && this._currentSurvey !== null){\r\n      console.log(\"setting buttons\")\r\n      console.log(this._currentSurvey.questions)\r\n      console.log(this._currentSurvey === undefined || this._currentSurvey === null)\r\n      console.log(this._currentSurvey)\r\n      this.setAnswersToRadiobuttons();\r\n    }\r\n  }\r\n\r\n  // hier wordt de String array\"answers\" geleegd in de functie,\r\n  // vervolgens wordt de array gelijk /gematched aan de answeroption van deze vraag die uit de database zijn gehaald\r\n  // In de forloop (HTML) wordt dan de answers gematched met dezelfde value waarde (dus antwoord A wordt radiobutton met Antwoord A)\r\n  setAnswersToRadiobuttons() {\r\n    this.currentQuestion = this.currentSurvey.questions.filter(question => {\r\n      return question.number === this.currentQuestionNumber + 1;\r\n    })[0];\r\n\r\n    if (this.currentQuestion === undefined) {\r\n      this.date = new Date();\r\n      this.dateString = formatDate(this.date, 'dd/MM/yyyy HH:mm:ss', 'en');\r\n      this.surveyScoreService.setFinishTimestamp(this.date);\r\n      this.surveyScoreService.setFinishTimestampString(this.dateString);\r\n      this.router.navigate(['/endpage']);\r\n      return;\r\n    }\r\n    this.answerOptionsArray = this.currentQuestion.answerOptions;\r\n\r\n  }\r\n\r\n\r\n  onFormSubmit() {\r\n    this.submittedAnswer = {surveyid: this.currentSurvey.id , chosenAnswerId: this.chosenAnswer.id , questionid: this.currentQuestion.number, answeredCorrect: false};\r\n    this.submittedAnswerService.postSubmittedAnswer(this.submittedAnswer).subscribe(answerIsCorrect => {\r\n      this.answerIsCorrect = answerIsCorrect;\r\n      this.saveAnswers();\r\n    })\r\n  }\r\n\r\n  // als je op knop \"volgende\" drukt wil je de volgende vraag laten zien\r\n  nextQuestion() {\r\n    this.currentQuestionNumber++;\r\n    this.setAnswersToRadiobuttons();\r\n    this.answerIsCorrect = null;\r\n    this.chosenAnswer = null;\r\n  }\r\n\r\n  //hier worden alle goede en foute antwoorden bijgehouden\r\n  saveAnswers(){\r\n    this.surveyScoreService.processAnswer(this.answerIsCorrect);\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron-fluid\" Style=\"background-image: url('./assets/images/traffic.jpg'); height: 250px\">\r\n  <div class=\"container mx-auto\">\r\n    <div class=\"row\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"jumbotron-fluid d-flex flex-column\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <h2> {{ currentQuestion?.questionDescription}}</h2>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row col-sm-12\">\r\n    </div>\r\n\r\n    <div class=\"row col-sm-12\">\r\n      <!-- form-->\r\n      <form #questionForm=\"ngForm\" (ngSubmit)=\"onFormSubmit()\">\r\n\r\n        <div class=\"radioBlok\" *ngFor=\"let answerOption of answerOptionsArray\">\r\n          <input type=\"radio\" name=\"answerButtons\" [(ngModel)]=\"chosenAnswer\" [value]=\"answerOption\">\r\n          <label class=\"antwoordLabel\">{{answerOption.value}}</label>\r\n        </div>\r\n\r\n        <button class=\"btn btn-light btn-sm\" type=\"submit\" *ngIf=\"chosenAnswer?.value != null && answerIsCorrect == null\">\r\n          Submit\r\n        </button>\r\n\r\n      </form>\r\n      <div *ngIf=\"answerIsCorrect\" class=\"col-sm-6\" style=\"background-color: white\" [ngStyle]=\"{ 'color': answerIsCorrect?.isCorrect === true ? 'green' : 'red' }\">\r\n        {{answerIsCorrect.answerExplanation}}\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container mx-auto\">\r\n  <div class=\"row col-sm-12\" style=\"margin: 5px; background-color: white\">\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-1\" Style=\"background-color:black;\" *ngIf=\"answerIsCorrect\">\r\n      <p style=\"margin: 1rem;\"><button class=\"btn btn-dark btn-lg\" (click)=\"nextQuestion()\">Volgende</button></p>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import {Component, OnInit} from '@angular/core';\r\nimport {SurveyService} from '../services/survey.service';\r\nimport {SurveyScoreService} from '../services/survey-score.service';\r\nimport {ScoreEntry} from '../model/scoreEntry';\r\n\r\n@Component({\r\n  selector: 'app-scoreboard',\r\n  templateUrl: './scoreboard.component.html',\r\n  styleUrls: ['./scoreboard.component.css']\r\n})\r\nexport class ScoreboardComponent implements OnInit {\r\n\r\n  scoreEntry: ScoreEntry;\r\n  scoreEntries: ScoreEntry[];\r\n\r\n  constructor(private surveyService: SurveyService, private surveyScoreService: SurveyScoreService) {\r\n    this.scoreEntry =     {\r\n      'userName': surveyScoreService.getUserName(),\r\n      'answersCorrect': surveyScoreService.getCorrectAnswers(),\r\n      'finishTimestamp': surveyScoreService.getFinishTimestamp(),\r\n      'finishTimestampString': surveyScoreService.getFinishTimestampString(),\r\n    };\r\n    surveyService.addHighScore(this.scoreEntry);\r\n    this.scoreEntries = surveyService.getHighscores();\r\n//    this.surveyScoreService.resetScores();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"jumbotron-fluid\">\r\n  <div class=\"container mx-auto\" style=\"margin-top: 2rem\">\r\n    <div class=\"row\">\r\n      <h2>High scores:</h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container mx-auto\" style=\"margin-top: 4rem\">\r\n\r\n<table class='table'>\r\n  <thead>\r\n  <tr>\r\n    <th>Naam:</th>\r\n    <th>Score:</th>\r\n    <th>Tijdstip van afronding:</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor='let scoreEntry of scoreEntries'>\r\n    <td>{{scoreEntry.userName}}</td>\r\n    <td>{{scoreEntry.answersCorrect}}</td>\r\n    <td>{{scoreEntry.finishTimestampString}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <h2 class='mx-auto'><button [routerLink]=\"['/namescreen']\" class=\"btn btn-dark btn-lg btn-block\">Probeer het nog een keer</button></h2>\r\n</div>\r\n\r\n\r\n<!--<div class=\"jumbotron-fluid\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\"></div>\r\n      <div class=\"col-md-6\"><h3>Je hebt {{correctAnswer}} vra(a)g(en) goed beantwoord.</h3></div>\r\n      <div class=\"col-md-3\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\" style=\"background-color: black\">\r\n      <div class=\"col-md-3\"></div>\r\n      <div class=\"col-md-6\"><h3>Je hebt {{incorrectAnswer}} vra(a)g(en) fout beantwoord.</h3></div>\r\n      <div class=\"col-md-3\"></div>\r\n    </div>\r\n\r\n  </div>\r\n</div>-->\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SubmittedAnswer } from '../model/submittedanswer';\r\nimport { AnswerIsCorrect } from '../model/answeriscorrect';\r\nimport { UrlService } from './url.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubmittedAnswerService {\r\n\r\n  private surveyUrl = this.urlService.url + '/submittedanswers/';\r\n\r\n  constructor(private http: HttpClient, \r\n              private urlService: UrlService) {\r\n\r\n  }\r\n  \r\n  postSubmittedAnswer(submittedAnswer: SubmittedAnswer) {\r\n    return this.http.post<AnswerIsCorrect>(this.surveyUrl, submittedAnswer);\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AnswerIsCorrect } from '../model/answeriscorrect';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyScoreService {\r\n\r\n  private userName = '';\r\n  private correctAnswer = 0;\r\n  private inCorrectAnswer = 0;\r\n  private finishTimestamp: Date;\r\n  private finishTimestampString = '';\r\n\r\n  constructor() { }\r\n\r\n  public getUserName() {\r\n    return this.userName;\r\n  }\r\n\r\n  public setUserName(userName: string) {\r\n    this.userName = userName;\r\n  }\r\n\r\n  public processAnswer(answerIsCorrect: AnswerIsCorrect){\r\n    answerIsCorrect?.isCorrect === true ? this.correctAnswer++ : this.inCorrectAnswer++;\r\n  }\r\n\r\n  public getCorrectAnswers(){\r\n    return this.correctAnswer;\r\n  }\r\n\r\n  public getIncorrectAnswers() {\r\n    return this.inCorrectAnswer;\r\n  }\r\n\r\n  public getFinishTimestamp(): Date {\r\n    return this.finishTimestamp;\r\n  }\r\n\r\n  public setFinishTimestamp(value: Date) {\r\n    this.finishTimestamp = value;\r\n  }\r\n\r\n  public getFinishTimestampString(): string {\r\n    return this.finishTimestampString;\r\n  }\r\n\r\n  public setFinishTimestampString(value: string) {\r\n    this.finishTimestampString = value;\r\n  }\r\n\r\n  public resetScores(){\r\n    this.correctAnswer = 0;\r\n    this.inCorrectAnswer = 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { UrlService } from './url.service';\r\nimport { Survey } from '../model/survey';\r\nimport {ScoreEntry} from '../model/scoreEntry';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyService {\r\n\r\n  private surveyUrl = this.urlService.url + '/surveys/';\r\n  survey: BehaviorSubject<Survey>;\r\n  scoreEntries: ScoreEntry[] = [];\r\n\r\n/*  scoreEntries: ScoreEntry[] = [{\r\n      'userName': 'Player 1',\r\n      'answersCorrect': 1,\r\n      'finishTimestamp': new Date(),\r\n      'finishTimestampString': '12/07/2020 14:28:23'\r\n    },\r\n    {\r\n      'userName': 'Player 2',\r\n      'answersCorrect': 2,\r\n      'finishTimestamp': new Date(),\r\n      'finishTimestampString': '13/07/2020 18:50:36'\r\n    },\r\n    {\r\n      'userName': 'Player 3',\r\n      'answersCorrect': 3,\r\n      'finishTimestamp': new Date(),\r\n      'finishTimestampString': '14/07/2020 13:03:14'\r\n    }\r\n  ];*/\r\n\r\n  constructor(  private http: HttpClient,\r\n                private urlService: UrlService) {\r\n    this.survey = new BehaviorSubject(null);\r\n  }\r\n\r\n  getInitSurveys(id: number) {\r\n    this.http.get<Survey>(this.surveyUrl + id).subscribe(survey => {\r\n      this.survey.next(survey)\r\n    });\r\n  }\r\n\r\n  public getHighscores() {\r\n    return this.scoreEntries;\r\n  }\r\n\r\n  public addHighScore(scoreEntry: ScoreEntry) {\r\n    this.scoreEntries.push(scoreEntry);\r\n    // after adding a new high score, the table is immediately again sorted.\r\n    this.scoreEntries.sort((a, b) => {\r\n      if (a.answersCorrect < b.answersCorrect) {return 1; }\r\n      if (a.answersCorrect > b.answersCorrect) {return -1; }\r\n      if (a.finishTimestamp < b.finishTimestamp) {return 1; }\r\n      if (a.finishTimestamp > b.finishTimestamp) {return -1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n/*  public sortHighScores(scoreEntries: ScoreEntry[]) {\r\n    return this.scoreEntries.sort((a, b) => {\r\n      if (a.answersCorrect > b.answersCorrect) {return 1; }\r\n      if (a.answersCorrect < b.answersCorrect) {return -1; }\r\n      return 0;\r\n    });\r\n  }*/\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UrlService {\r\n\r\n  url = 'http://localhost:8080/quiz';\r\n\r\n  constructor() { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}